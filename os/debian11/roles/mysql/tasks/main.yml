---
# This playbook contains common plays that will be run on all nodes.
- include_vars: /cfg/cnm_vars.yml
  tags: mysql

- name: Install packages
  apt:
    name: [ 'libdbd-mysql-perl', 'mariadb-client', 'mariadb-server', 'mariadb-common', 'default-libmysqlclient-dev', 'php7.4-mysql', 'python3-mysqldb' ]
    state: present
    force: yes
    update_cache: yes
  become: true
  tags: mysql

- name: Verify paths for persistance data (/store/mysql|/store/mysql_tmp|/store/data)
  file: path={{ item.path }} state=directory owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { path: '/store/mysql', owner: 'mysql', group: 'mysql',  mode: '0775' }
    - { path: '/store/mysql_tmp', owner: 'mysql', group: 'mysql', mode: '0755' }
    - { path: '/store/data', owner: 'root', group: 'root', mode: '0777' }
  tags: mysql

- name: Check if directory /var/lib/mysql exists
  stat: path=/var/lib/mysql
  register: var_lib_mysql
  tags: mysql

- name: Check if directory /var/lib/mysql is empty
  shell: "ls -A /var/lib/mysql/ | wc -l"
  register: num_files
  tags: mysql

- name: Move if dir and not empty /var/lib/mysql -> /store/mysql
  shell: mv /var/lib/mysql/* /store/mysql 2>/dev/null
  when: var_lib_mysql.stat.exists and var_lib_mysql.stat.isdir and num_files.stdout != "0"
  tags: mysql

- name: Create symlink /var/lib/mysql -> /store/mysql
  file: path='/var/lib/mysql' src='/store/mysql' state=link owner=root group=root mode='0777' force=true
  tags: mysql


- name: Verify base symlinks
  file: path={{ item.path }} src={{ item.src }} state=link owner=root group=root mode={{ item.mode }}
  with_items:
    - { path: '/opt/data', src: '/store/data', mode: '0777' }
  tags: mysql


- name: Start MySQL service
  become: yes
  become_user: root
  become_method: sudo
  service: name=mysql state=restarted enabled=true
  tags: mysql

- name: Se actualiza la clave de root para todas las cuentas
  mysql_user: name=root host={{ item }} password={{ db_root_password }} priv=*.*:ALL,GRANT
  with_items:
     - "{{ ansible_hostname }}"
     - 127.0.0.1
     - ::1
     - localhost
  when: db_root_password is defined
  tags: mysql

- name: Create .my.cnf file with root password credentials
  become: yes
  become_user: root
  become_method: sudo
  template: src=my.cnf.root.j2 dest=/root/.my.cnf owner=root group=root mode=0600
  when: db_root_password is defined
  tags: mysql
  notify:
  - restart mysql

- name: Create 50-server.cnf config file 
  become: yes
  become_user: root
  become_method: sudo
  template: src=50-server.cnf.j2 dest=/etc/mysql/mariadb.conf.d/50-server.cnf owner=root group=root mode=0644
  when: db_max_connections is defined
  tags: mysql
  notify:
  - restart mysql

- name: MariaDb config Files
  copy: src="{{ item }}" dest="/etc/mysql/mariadb.conf.d/{{ item }}"  owner=root group=root mode=0644
  with_items:
    - 50-client.cnf
    - 50-mysql-clients.cnf
    - 50-mysqld_safe.cnf
    - 60-galera.cnf
  tags: mysql
  notify:
   - restart mysql

- name: delete anonymous MySQL server user for localhost
  action: mysql_user user="" host=localhost state="absent"
  tags: mysql

- name: remove the MySQL test database
  action: mysql_db db=test state=absent
  tags: mysql

- name: Create databases
  mysql_db: name={{ item }} state=present
  with_items:
   - onm
   - cnm
  tags: mysql

- name: Create onm user and set privileges
  mysql_user: name={{db_user}} password={{db_pwd}} host=localhost priv=*.*:ALL,GRANT state=present
  tags: mysql

- name: logrotate config
  copy: src=mysql-server.logrotate dest=/etc/logrotate.d/mysql-server  owner=root group=root mode=0640
  tags: mysql

#- name: Script de arranque
#  copy: src=mysql.init dest=/etc/init.d/mysql  owner=root group=root mode=0755
#  tags: mysql

- meta: flush_handlers

...


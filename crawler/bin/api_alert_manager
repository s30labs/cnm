#!/usr/bin/perl -w
#-------------------------------------------------------------------------------------------
# api_manager
#-------------------------------------------------------------------------------------------
# A partir de un evento o eventos especificado/s por el parametro i Chequea si se debe 
# generar una alerta y en caso afirmativo, la genera.
#-------------------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Std;
use ONMConfig;
use Crawler::Store;
use Crawler::LogManager::API;

use Data::Dumper;

#-------------------------------------------------------------------------------------------
my $VERSION='1.0';
#-------------------------------------------------------------------------------------------
my $cid_ip=my_ip();
my $cid='default';

#-------------------------------------------------------------------------------------------
my $FILE_CONF='/cfg/onm.conf';
my $rcfgbase=conf_base($FILE_CONF);
my $host_idx=$rcfgbase->{'host_idx'}->[0];
my $host=$rcfgbase->{'host_name'}->[0];
my $data_path=$rcfgbase->{'data_path'}->[0];
my $store_path=$rcfgbase->{'store_path'}->[0];
my $cnt_path=$store_path.'trap_counter';
mkdir $cnt_path,0755;

my $db_server=$rcfgbase->{db_server}->[0];
my $db_name=$rcfgbase->{db_name}->[0];
my $db_user=$rcfgbase->{db_user}->[0];
my $db_pwd=$rcfgbase->{db_pwd}->[0];

#-------------------------------------------------------------------------------------------
my %opts=();
getopts("t:hd:n:m:k:i:",\%opts);
if ($opts{h}) { my $USAGE = usage(); die $USAGE;}
my $log_level= (defined $opts{d}) ? $opts{d} : 'info';
$log_level='debug';

my $tag='unk';
if ($opts{t}) { $tag=$opts{t}; }


#-------------------------------------------------------------------------------------------
my $api_manager=Crawler::LogManager::API->new(store_path=>$store_path, host_idx=>$host_idx, host=>$host, cfg=>$rcfgbase, log_level=>$log_level, data_path=>$data_path, cid=>$cid, cid_ip=>$cid_ip, 'tag'=>$tag );
$api_manager->init();
$api_manager->check_configuration();

my %EV = ( 'ip'=>$opts{n}, 'msg'=>$opts{m}, 'evkey'=>$opts{k}, 'iid'=>$opts{i} );
#print Dumper(\%EV);

$api_manager->event(\%EV);
my $alert_id=$api_manager->check_alert();
print "$alert_id\n";

$api_manager->set_gui_mark($cid,$cid_ip);

#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
sub usage {

   my $legend = check_version();

   my @fpth = split ('/',$0,10);
   my @fname = split ('\.',$fpth[$#fpth],10);
   my $USAGE = <<USAGE;
$legend
Gestor de eventos/alertas por el API.

$fpth[$#fpth] -h  : Ayuda
$fpth[$#fpth] -d [debug|info] : Adapta el nivel de depuracion
$fpth[$#fpth] -t [2|3|4|5] : Tag, en este caso es la facility (local2, local3, local4 o local5=filters)

USAGE

   return $USAGE;

}


#!/usr/bin/perl -w
#------------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Long;
use Pod::Usage;
use CNMScripts::CNMAPI;
use Data::Dumper;
use JSON;

#-------------------------------------------------------------------------------------------
my @fpth = split ('/',$0,10);
my @fname = split ('\.',$fpth[$#fpth],10);
my $USAGE = <<USAGE;
API Scripts - Add Device (POST)
(c) s30labs

$fpth[$#fpth] [-d debug|info] [-c cid] [-m] -a host/ip [-p name=a,domain=b,ip=c,status=d ....]
$fpth[$#fpth] -h  : Ayuda
USAGE

#-------------------------------------------------------------------------------------------
my $log_mode=3;
my %OPTS = ();
GetOptions (\%OPTS,'help','h','man','debug','c=s','cid=s',
            'm','a=s','p=s','host=s'
) or pod2usage(-exitval => 2, -input => \*DATA);

if ( ($OPTS{'man'}) || ($OPTS{'help'}) || ($OPTS{'h'}) ) { 
	pod2usage(-exitval => 2, -input => \*DATA);
}
if ((! $OPTS{'a'}) && (! $OPTS{'host'})) { pod2usage(-exitval => 2, -input => \*DATA); }


my ($host_ip,$log_level,$cid,$prov_metrics)=('localhost','info','default',0);
if ($OPTS{'debug'}) { $log_level='debug'; }

if ($OPTS{'c'}) { $cid = $OPTS{'c'}; }
elsif ($OPTS{'cid'}) { $cid = $OPTS{'cid'}; }

if ($OPTS{'m'}) { $prov_metrics = 1; }

if ($OPTS{'h'}) { $host_ip = $OPTS{'h'}; }
elsif ($OPTS{'host'}) { $host_ip = $OPTS{'host'}; }

my %row=();
if (defined $OPTS{p}) {
   my @param_data=split(',',$OPTS{p});
   foreach my $p (@param_data) {
      my ($k,$v)=split('=',$p);
      $row{$k}=$v;
   }
}

if (! exists $row{'name'}) { 
	print "Faltan datos para dar de alta el dispositivo - No definido name\n";
	die $USAGE;
}
if (! exists $row{'domain'}) {
   print "Faltan datos para dar de alta el dispositivo - No definido domain\n";
   die $USAGE;
}
if (! exists $row{'ip'}) {
   print "Faltan datos para dar de alta el dispositivo - No definido ip\n";
   die $USAGE;
}

#// Campos disponibles:
#// - name           => nombre
#// - domain         => dominio
#// - ip             => direccion ip
#// - type           => tipo de dispositivo
#// - snmpversion    => 0:sin SNMP | 1:version 1 | 2:version 2 | 3:version 3 (0 si no se indica)
#// - snmpcommunity  => comunidad snmp (versiones 1 y 2)
#// - snmpcredential => credencial snmp (version 3)
#// - entity         => 0:dispositivo fÃ­sico | 1:servicio web (0 si no se indica)
#// - geo            => geolocalizacion en formato Google Maps
#// - critic         => 25:criticidad baja | 50:criticidad media | 75:criticidad alta | 100:criticidad mazima (50 si no se indica)
#// - correlated     => ID del dispositivo del que depende
#// - status         => 0:activo | 1:inactivo | 2:mantenimiento (0 si no se indica)
#// - profile        => perfil al que pertenece el dispositivo
#//
#// Campos obligatorios:
#// - name
#// - domain
#// - ip
#//


my $api=CNMScripts::CNMAPI->new( 'host'=>$host_ip, 'timeout'=>10, 'log_level'=>$log_level );
my ($user,$pwd)=('admin','cnm123');
my $sid = $api->ws_get_token($user,$pwd);
#print "sid=$sid\n";

my $class='';
my $endpoint='devices.json';
my $response = $api->ws_post($class,$endpoint,\%row);

#'rc' => 0,
#'id' => '2',
#'rcstr' => ''
if ($response->{'rc'}!=0) {
	print '**ERROR** al crear el dispositivo ['.$response->{'rc'}.'] - '.$response->{'rcstr'}."\n";
	exit $response->{'rc'};
}

if ($prov_metrics) {
	my $id_dev=$response->{'id'};
	`/opt/crawler/bin/prov_device_app_metrics  -c $cid  -i $id_dev`;
	`/opt/crawler/bin/plite -c $cid -r $id_dev -t 1`;
}

__DATA__
#-----------------------------------------------------------------------
=head1 NAME

api-set-device - Da de alta un dispositivo 

=head1 SYNOPSIS

api-set-device [-debug] [-c cid] [-m] -a host/ip [-p name=a,domain=b,ip=c,status=d ....]

api-set-device [-h | -help]

Options:

-cid    		cid. Si no se especifica es default

-m 	  		Genera Metricas

-a|-host		IP del CNM

-p      		Campos del dispositivo separados por ','.

-h|-help  	Mensaje de ayuda

=head1 OPTIONS



=over 8


=back

=head1 DESCRIPTION

  B<This program> will read the given input file(s) and do someting
  useful with the contents thereof.

=cut


#!/usr/bin/perl -w
#-------------------------------------------------------------------------------------------
# user2view
#-------------------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Long;
use Data::Dumper;
use ONMConfig;
use Crawler::Store;
use JSON;
use Encode qw(decode_utf8);
use ATypes;
use ProvisionLite;

#-------------------------------------------------------------------------------------------
#my $SEED = '[{"monitor_label":"P02-SP0006-KPI0004", "deviceip":"192.168.59.38", "metric_label":"P02-SP0006-KPI0004"}]';
my $SEED = '[{"monitor_label":"IDX_TEST", "deviceip":"192.168.57.9", "metric_label":"FICHEROS IDX"}]';

#-------------------------------------------------------------------------------------------
my $FILE_CONF='/cfg/onm.conf';
my ($rres,$sql,$HELP,$pSet, $pClr, $VERBOSE,$cid,$plog_level)=([],'',0,0,0,0,'default','debug');
my $USAGE = "Usage: $0 -set|clr  >> Activate|Deactivate monitors specified in json file\n";

#-------------------------------------------------------------------------------------------
GetOptions( "help" => \$HELP, "h" => \$HELP, "set"=>\$pSet, "clr"=>\$pClr, "v"=>\$VERBOSE, "d=s"=>\$plog_level)
  or die("$USAGE\n");

if ($HELP) { die("$USAGE\n"); }

my $SET = ($pClr) ? 0 : 1;
if ($VERBOSE) { print "SET=$SET\n"; }

my $log_level= (defined $plog_level) ? $plog_level : 'debug';
my $log_mode = ($VERBOSE) ? 3 : 1;

#-------------------------------------------------------------------------------------------
my $rCFG=conf_base($FILE_CONF);
my $conf_path=$rCFG->{'conf_path'}->[0];
my $txml_path=$rCFG->{'txml_path'}->[0];
my $app_path=$rCFG->{'app_path'}->[0];
my $dev_path=$rCFG->{'dev_path'}->[0];
my $store_path=$rCFG->{'store_path'}->[0];

my $db_server=$rCFG->{db_server}->[0];
my $db_name=$rCFG->{db_name}->[0];
my $db_user=$rCFG->{db_user}->[0];
my $db_pwd=$rCFG->{db_pwd}->[0];

#my $store=Crawler::Store->new(db_server=>$db_server,db_name=>$db_name,db_user=>$db_user,db_pwd=>$db_pwd);
#$store->store_path($store_path);
#my $dbh=$store->open_db();

#-------------------------------------------------------------------------------------------
my $provision=ProvisionLite->new(log_level=>$log_level, log_mode=>$log_mode, cfg=>$rCFG);
$provision->init();
my $store=$provision->istore();
my $dbh=$provision->dbh();

#-------------------------------------------------------------------------------------------
my $json = JSON->new();
my $vseed = $json->decode($SEED);
print Dumper($vseed),"\n";

#-------------------------------------------------------------------------------------------
my %IDS=();
foreach my $h (@$vseed) {

	my $monitor_label = $h->{'monitor_label'};
	my $deviceip = $h->{'deviceip'};
	my $metric_label = $h->{'metric_label'};

	my $cond = '';
	if (exists $h->{'deviceip'}) { $cond = 'ip = "'.$h->{'deviceip'}.'"'; }
   $sql = "SELECT id_dev FROM devices WHERE $cond";
   $rres = $store->get_from_db_cmd($dbh,$sql);
   my $id_dev = $rres->[0][0];
	$IDS{$id_dev} = 1;	

	$sql = "SELECT subtype,monitor FROM alert_type WHERE cause like '%$monitor_label%'";
	$rres = $store->get_from_db_cmd($dbh,$sql);
	my $subtype = $rres->[0][0];
	my $monitor = $rres->[0][1];
#	if (($IDU !~ /^\d+$/) || ($IDU==0)) {
#   	die "**ERROR** $USER not defined\n";
#	}

	$sql = "SELECT id_tm2iid,status,label FROM prov_template_metrics2iid WHERE id_dev=$id_dev and mname='$subtype'";
	$rres = $store->get_from_db_cmd($dbh,$sql);
	my @id_tm2iid=();
	foreach my $v (@$rres) {
		push @id_tm2iid, $v->[0];
	}

	my $ids = join(',',@id_tm2iid);
	if (!$SET) { $monitor='0'; }
	my $CMD = "UPDATE prov_template_metrics2iid SET watch=$monitor WHERE id_tm2iid IN ($ids)";
	print "---->$CMD-----\n";

	# En lugar de pactions, se debe usar plite
#	my $rc = $store->store_qactions($dbh, {'action'=>'setmetric', 'task'=>'setmetric', 'auser'=>'core', 'params'=>"id_dev=$id_dev;cid=$cid",'descr'=>"ASOCIA METRICA + GENERA METRICAS", 'atype'=>ATYPE_SET_METRICS_FROM_TEMPLATE});

	#$provision->prov_do_set_device_metric({'id_dev'=>$id_dev, 'init'=>0, 'cid'=>$cid});
}


foreach my $id_dev (sort keys %IDS) {
	$provision->prov_do_set_device_metric({'id_dev'=>$id_dev, 'init'=>0, 'cid'=>$cid});
}

#-------------------------------------------------------------------------------------------
$store->close_db($dbh);


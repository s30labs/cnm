#!/usr/bin/perl -w
#------------------------------------------------------------------------------
# Fichero: $Id$
#------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Std;
use ONMConfig;
use Metrics::Base;
use Crawler::SNMP;
use Crawler::Latency;
use Crawler::Wbem;

#------------------------------------------------------------------------------
my $FILE_CONF='/cfg/onm.conf';
my $GET_IID='/opt/crawler/bin/libexec/get_iid';

#------------------------------------------------------------------------------
#<TR class="VentDat">
#<TD align="left" width="100%"><b>&nbsp;__TITULO1__</b></TD>
#</TR>

my $HTML_TITLE='
<TR class="VentDat">
<TD align="left" width="100%"><b>&nbsp;__TITULO1__</b></TD>
</TR>
<TR class="VentDat">
<TD align="left" width="100%"><b>&nbsp;__TITULO2__</b></TD>
</TR>
<tr ><td class="VentPar"><img src="../images/magic.gif" width="1" height="5"></td></tr>';


my $HTML_DATA='
<TR class="VentDat">
 <TD><img src="../images/magic.gif" width="5" height="1"></TD>

   <TD align="left" width="__WIID__%">__BS__ __IID__ __BE__ </TD>
   <TD align="left" width="__WDESC__%">__BS__ __DESC__ __BE__ </TD>
   <TD align="left" width="__WRES__%">__BS__ __RES__ __BE__ </TD>
   <TD align="left" width="__WICO__%">__BS__ __ICO__ __BE__ </TD>

 <TD><img src="../images/magic.gif" width="5" height="1"></TD>
</TR>
<tr ><td colspan="__NCOLS__" class="VentPar"><img src="../images/magic.gif" width="1" height="1"></td></tr>';


# Informacion ------------------------------------------------------
my @fpth = split ('/',$0,10);
my @fname = split ('\.',$fpth[$#fpth],10);
my $USAGE = <<USAGE;
(c) fml

$fpth[$#fpth] -h : Ayuda
$fpth[$#fpth] -z : Verbose
$fpth[$#fpth] [-w] -d ip|nombre -s subtype : Chequea la metrica subtype contra el dispositivo especificado
$fpth[$#fpth] [-w] -d ip|nombre -s xagt -m monitor [-p params] : Chequea el tipo de metrica monitor contra el dispositivo especificado
[-c] community
[-v] version
[-l] log_level

USAGE

#-------------------------------------------------------------------------------------------
my $LATENCY;
my $SNMP;
my $SAGENT;
my $WBEM;
my %device=();
my %desc=();
my %opts=();
getopts("hz:wd:s:c:v:l:m:p:",\%opts);

my $FORMAT = (defined $opts{w}) ? 'html' : 'txt';
my $rcfgbase=conf_base($FILE_CONF);
my $log_level= (defined $opts{l}) ? $opts{l} : 'info';
my $STORE_PATH='/opt/data/rrd/';

#-------------------------------------------------------------------------------------------
if ($opts{h}) { die $USAGE; }
elsif ( (! $opts{d}) || (!$opts{s})  ) { die $USAGE; }

my $subtype=$opts{s};
my $monitor=$opts{m} || undef ;
my $params=$opts{p} || undef;
$device{ip}=$opts{d};
$device{community}= (defined $opts{c}) ? $opts{c} : 'public';
$device{version}= (defined $opts{v}) ? $opts{v} : 1;

my @RESULTS=();
my $DESCR;
#-------------------------------------------------------------------------------------------
#print '-' x25, "\n";
if ($FORMAT eq 'txt') { push @RESULTS, ['IP',$device{ip},'']; }

#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
# TIPO		CASO					CRITERIO
# snmp		No hay iids 	=> mname = subtype
# snmp		Si hay iids 	=> mname = subtype-iid
# snmp		Especiales 		=>	mname = subtype = custom_xx (xx = hash)
# latency	Todas 			=> mname = w_subtype-xx (xx = hash, subtype = mon_abc)
# xagent 	Sin atributos	=> mname = subtype_id	 (id = identificador predefinido, xx = hash)
# xagent 	Con atributos	=> mname = subtype_id_xx (id = identificador predefinido, xx = hash)
#-------------------------------------------------------------------------------------------
# TIPO		Tabla						CASO		SIGNIFICADO DE MONITOR
# latency	cfg_monitor 			Todas		cfg_monitor.monitor = mname = w_subtype-xx (xx = hash, subtype = mon_abc)
# xagent		cfg_monitor_xagent	sin		cfg_monitor_xagent.name=mname
#-------------------------------------------------------------------------------------------

if  ($subtype =~ /xagt/)  {
	#En este caso subtype debe ser realmente el nombre de la metrica metrics.name
   $SAGENT=Crawler::SAgent->new( name=>"chk_metric", store_path=>$STORE_PATH, lapse=>300,
                                 cfg=>$rcfgbase, range=>0, log_level=>$log_level, mode_flag=>{rrd=>0, alert=>0} );

	$SAGENT->chk_metric( { ip => $device{ip}, mname => $subtype, monitor=>$monitor, params=>$params }, \@RESULTS );

}


elsif ( 	($subtype =~ /w_(mon_\w+)-\w+/) || 
			($subtype =~ /^(mon_\w+)$/) || 
			($subtype =~ /^(disp_\w+)$/)  ) {

	if ($subtype =~ /^s_(w_mon_\w+-\w+)-\w+$/)  {$subtype =$1; }

   $LATENCY=Crawler::Latency->new(  name=>"chk_metric", store_path=>$STORE_PATH, lapse=>300,
                                    cfg=>$rcfgbase, range=>0, log_level=>$log_level, mode_flag=>{rrd=>0, alert=>0} );
	$LATENCY->chk_metric( { ip => $device{ip}, mname => $subtype, monitor=>$monitor, params=>$params }, \@RESULTS );
}


elsif (  ($subtype =~ /^s_(wmi_\w+)-\w+/) ||
      ($subtype =~ /^(wmi_\w+)$/) ) {

	   $WBEM=Crawler::Wbem->new(  name=>"chk_metric", store_path=>$STORE_PATH, lapse=>300,
                                    cfg=>$rcfgbase, range=>0, log_level=>$log_level, mode_flag=>{rrd=>0, alert=>0} );
   	$WBEM->chk_metric( { ip => $device{ip}, mname => $subtype, monitor=>$monitor, params=>$params }, \@RESULTS );
}


#elsif ( $subtype =~ /^s_(.*?)[_|-]\w+$/ ) {
else {
#   $subtype=$1;

#print "S=$subtype \n";

   push @RESULTS, ['IID','OID/DESCR','RESULTADO'];

   $SNMP=Crawler::SNMP->new(  name=>"chk_metric", store_path=>$STORE_PATH, lapse=>300,
                              cfg=>$rcfgbase, range=>0, log_level=>$log_level, mode_flag=>{rrd=>0, alert=>0} );
   $SNMP->chk_metric( { ip => $device{ip}, mname => $subtype, monitor=>$monitor, params=>$params }, \@RESULTS );
}



#-------------------------------------------------------------------------------------------
if ($FORMAT ne 'txt') {
   #my $ni=scalar @Metrics::Base::IIDs;
   my $titulo="$DESCR&nbsp;&nbsp;($subtype)";
   $HTML_TITLE =~s/__TITULO1__/$titulo/;
   $titulo="Host=$device{ip}&nbsp;&nbsp;";
   $HTML_TITLE =~s/__TITULO2__/$titulo/;
   $HTML_TITLE =~s/\n//g;
   print "$HTML_TITLE\n";
}
foreach my $l (@RESULTS) {
      do_write($l->[0], $l->[1], $l->[2]);
}


#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------

#------------------------------------------------------------------------------
sub do_write {
my ($iid,$desc,$res)=@_;

   if ($FORMAT eq 'txt') { print "$iid\t$desc\t$res\n"; }
   else {

      my $html_out=$HTML_DATA;

      if ($iid eq 'IID') {
         $html_out =~ s/__BS__/<b>/g;
         $html_out =~ s/__BE__/<\/b>/g;
      }
      else {
         $html_out =~ s/__BS__//g;
         $html_out =~ s/__BE__//g;
      }

		if ($desc eq 'latency') {

	      $html_out =~s/__NCOLS__/6/;

   	   $html_out =~s/__WIID__/90/;
      	$html_out =~s/__IID__/$iid/;

	      $html_out =~s/__WDESC__/3/;
   	   $html_out =~s/__DESC__//;
      	$html_out =~s/__WRES__/2/;
      	$html_out =~s/__RES__//;

      	$html_out =~s/__WICO__/5/;
      	$html_out =~s/__ICO__//;
		}
	
		else {

         $html_out =~s/__NCOLS__/6/;

         $html_out =~s/__WIID__/30/;
         $html_out =~s/__IID__/$iid/;

         $html_out =~s/__WDESC__/35/;
         $html_out =~s/__DESC__/$desc/;

         $html_out =~s/__WRES__/30/;
         $html_out =~s/__RES__/$res/;

         $html_out =~s/__WICO__/5/;
         $html_out =~s/__ICO__//;
      }


      $html_out =~s/\n//g;
      print "$html_out\n";
   }
}


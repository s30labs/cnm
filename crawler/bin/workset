#!/usr/bin/perl -w
#-------------------------------------------------------------------------------------------
# Fichero: workset
# Consolida los datos de metricas en las tablas globales work_xxx a partir del resto de tablas.
#
#-------------------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Std;
use ONMConfig;
use Crawler::Store;
use Data::Dumper;


#-------------------------------------------------------------------------------------------
my $VERSION='1.0';
#-------------------------------------------------------------------------------------------
my $FILE_CONF='/cfg/onm.conf';

#-------------------------------------------------------------------------------------------
my $rCFG=conf_base($FILE_CONF);
my $conf_path=$rCFG->{'conf_path'}->[0];
my $txml_path=$rCFG->{'txml_path'}->[0];
my $app_path=$rCFG->{'app_path'}->[0];
my $dev_path=$rCFG->{'dev_path'}->[0];
my $store_path=$rCFG->{'store_path'}->[0];

my $db_server=$rCFG->{db_server}->[0];
my $db_name=$rCFG->{db_name}->[0];
my $db_user=$rCFG->{db_user}->[0];
my $db_pwd=$rCFG->{db_pwd}->[0];

#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
my %opts=();
getopts("frhx:c:i:a:d:",\%opts);
if ($opts{h}) { my $USAGE = usage(); die $USAGE;}

my $log_level= (defined $opts{d}) ? $opts{d} : 'info';

if ( (! $opts{i}) && (! $opts{f})) { my $USAGE = usage(); die $USAGE;}

#-------------------------------------------------------------------------------------------
if ($opts{r} && ($opts{i} eq 'all')) {
	my $dir_idx="$Crawler::MDATA_PATH/input/idx";
	opendir (DIR,$dir_idx);
	my @files_idx = grep { /\d+\.info/ } readdir(DIR);
	foreach my $f (@files_idx) { unlink "$dir_idx/$f"; }
	closedir(DIR);
}


#-------------------------------------------------------------------------------------------
# Para conexion a BBDD cnm
my $store=Crawler::Store->new(db_server=>$db_server,db_name=>$db_name,db_user=>$db_user,db_pwd=>$db_pwd, cfg=>$rCFG, log_level=>$log_level);
$store->store_path($store_path);
my $dbh=$store->open_db();


#-------------------------------------------------------------------------------------------
# Se obtienen los datos de conexion a la BBDD onm a partir de las credenciales de
# $CID en cnm.cfg_cnms

my ($CID,$HIDX,$host_ip,$params)=('','','',{});

if ($opts{a}) { $host_ip=$opts{a}; }
else { $host_ip=my_ip(); }

# Si se especifica el CID obtengo los datos de conexion de ese CID
if ($opts{c}) { 
	$CID=$opts{c}; 
	$params=$store->get_mcnm_credentials($dbh,{'cid'=>$CID, 'host_ip'=>$host_ip});
	#$host_ip=$params->{$CID}->{'host_ip'};
}
# Si se especifica el HIDX obtengo los datos de conexion de ese HIDX
elsif ($opts{x}) {
   $HIDX=$opts{x};
   $params=$store->get_mcnm_credentials($dbh,{'hidx'=>$HIDX, 'host_ip'=>$host_ip});
	my @aux=keys (%$params);
	$CID=$aux[0];
	#$host_ip=$params->{$CID}->{'host_ip'};
}
# Si no se especifica otra cosa, obtengo todos los CIDs del host
else {
	#$host_ip=my_ip(); 
	$params=$store->get_mcnm_credentials($dbh,{'host_ip'=>$host_ip});
}

$store->close_db($dbh);

#-------------------------------------------------------------------------------------------
my @ID_DEVS=();
my $TNOW=time;

#-------------------------------------------------------------------------------------------
foreach my $cid (keys %$params) {

	eval {

		$store=Crawler::Store->new(	db_server=>$params->{$cid}->{'db_server'},
												db_name=>$params->{$cid}->{'db_name'},
												db_user=>$params->{$cid}->{'db_user'},
												db_pwd=>$params->{$cid}->{'db_pwd'}, 
												cfg=>$rCFG,
												log_level=>$log_level );
		$store->store_path($store_path);
		$dbh=$store->open_db();



   	#-------------------------------------------------------------------
   	# Con la opcion f solo se regeneran los ficheros de los crawlers.
	   #-------------------------------------------------------------------
		if ($opts{f}) {
		   $store->consolidate_work_tables($dbh);
		}

		else  {
			#-------------------------------------------------------------------------------------------
			# Se inicializa el campo subtable de metrics para todas aquellas metricas que lo tengan a -1
			$store->set_graph_subtables($dbh);

			if ($opts{i} eq 'all') {
   			my $rres=$store->get_from_db($dbh,'id_dev','devices','status in (0,2)','order by id_dev');
   			foreach my $l (@$rres) { push @ID_DEVS, $l->[0]; }
			}
			else {
				my @d=split(',',$opts{i});
				foreach my $i (@d) {
					if ($opts{i}=~/\d+/) { push @ID_DEVS, $i; } 
				}
			}

			my $total=scalar(@ID_DEVS);
			my $cnt=0;
			foreach my $id_dev (@ID_DEVS) {
				#Se regeneran las metricas en work_xxx para $id_dev
				#Se generan los ficheros idx correspondientes para los crawlers
				$cnt+=1;
				$store->log('info',"Procesando [$cnt | $total] host_ip=$host_ip cid=$cid id_dev=$id_dev ");
				$store->store_crawler_work($dbh,$id_dev,$TNOW,$cid);
			}
		   #-------------------------------------------------------------------
   		#Se generan los ficheros idx correspondientes para los crawlers
   		#-------------------------------------------------------------------
   		$store->consolidate_work_tables($dbh);

		}

		#-------------------------------------------------------------------------------------------
		$store->close_db($dbh);
	};

	if ($@) {$store->log('info',"ERROR host_ip=$host_ip cid=$cid ($@)"); }
}

#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
sub usage {

   my $legend = check_version();

   my @fpth = split ('/',$0,10);
   my @fname = split ('\.',$fpth[$#fpth],10);
   my $USAGE = <<USAGE;
$legend
Genera ficheros idx para los crawlers.

$fpth[$#fpth] -i [id_dev|all] -c [cid] [-a host] [-d] [-h]
$fpth[$#fpth] -f  [cid] [-d]
-f Solo regenera los ficheros de los crawlers. Asume los valores que haya en work_xxx
-i [id_dev|all]: Indica el dispositivo
-c [cid]: CID Client ID
-x [hidx]: HIDX Client ID
-a [host]: IP/Nombre del equipo donde reside el CID. Si no se especifica es la IP donde se ejecuta.
-r: Lo primero que hace el borrar todos los ficheros idx. (Solo es valido si id_dev es "all")
-d: [debug|info] Fija el nivel de depuracion (por defecto info)
-h: Ayuda

USAGE

   return $USAGE;

}


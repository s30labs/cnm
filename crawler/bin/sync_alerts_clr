#!/usr/bin/perl -w
#-------------------------------------------------------------------------------------------
# Fichero: sync_alerts_clr
# Sincroniza las alertas de alerts con alerts_read y cfg_views
#
#-------------------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Std;
use ONMConfig;
use Crawler::Store;
use Crawler::Notifications;
use Data::Dumper;


#-------------------------------------------------------------------------------------------
my $VERSION='1.0';
#-------------------------------------------------------------------------------------------
my $FILE_CONF='/cfg/onm.conf';

#-------------------------------------------------------------------------------------------
my $rCFG=conf_base($FILE_CONF);
my $conf_path=$rCFG->{'conf_path'}->[0];
my $txml_path=$rCFG->{'txml_path'}->[0];
my $app_path=$rCFG->{'app_path'}->[0];
my $dev_path=$rCFG->{'dev_path'}->[0];
my $store_path=$rCFG->{'store_path'}->[0];

my $db_server=$rCFG->{db_server}->[0];
my $db_name=$rCFG->{db_name}->[0];
my $db_user=$rCFG->{db_user}->[0];
my $db_pwd=$rCFG->{db_pwd}->[0];

#-------------------------------------------------------------------------------------------
my %opts=();
getopts("hx:c:d:a:i:",\%opts);
if ($opts{h}) { my $USAGE = usage(); die $USAGE;}
if (! $opts{a}) { my $USAGE = usage(); die $USAGE;}
my $id_alert=$opts{a};

my $log_level= (defined $opts{d}) ? $opts{d} : 'info';


#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
# Para conexion a BBDD cnm
my $store=Crawler::Store->new(db_server=>$db_server,db_name=>$db_name,db_user=>$db_user,db_pwd=>$db_pwd, log_level=>$log_level);
$store->store_path($store_path);
my $dbh=$store->open_db();


#-------------------------------------------------------------------------------------------
# Se obtienen los datos de conexion a la BBDD onm a partir de las credenciales de
# $CID en cnm.cfg_cnms

my ($gCID,$gCID_IP,$params)=('','',{});
# Si se especifica el CID obtengo los datos de conexion de ese CID
if (($opts{c}) && ($opts{i})){ 
	$params=$store->get_mcnm_credentials($dbh,{'cid'=>$opts{c}, 'host_ip'=>$opts{i}});
}
# Si se especifica el HIDX obtengo los datos de conexion de ese HIDX
elsif ($opts{x}) {
   $params=$store->get_mcnm_credentials($dbh,{'hidx'=>$opts{x}});
}
else  { my $USAGE = usage(); die $USAGE;}
## Si no se especifica otra cosa, obtengo todos los CIDs del host
#else {
#	$host_ip=my_ip(); 
#	$params=$store->get_mcnm_credentials($dbh,{'host_ip'=>$host_ip});
#}

$store->close_db($dbh);

#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
foreach my $cid (keys %$params) {

	eval {

		$gCID=$cid;
		$gCID_IP=$params->{$cid}->{'host_ip'};

		$store=Crawler::Store->new(	db_server=>$params->{$cid}->{'db_server'},
												db_name=>$params->{$cid}->{'db_name'},
												db_user=>$params->{$cid}->{'db_user'},
												db_pwd=>$params->{$cid}->{'db_pwd'}, 
												log_level=>$log_level );
		$store->store_path($store_path);
		$dbh=$store->open_db();

      $store->cid_ip($gCID_IP);
      $store->cid($cid);

		#-------------------------------------------------------------------------------------------
		# alerts -> cfg_views
      my $VIEWS2ALERTS=$store->analize_views_ruleset($dbh,$cid);
		# alerts -> alerts_read
      $store->store_alerts_read_local_clr($dbh,$id_alert);

		#-------------------------------------------------------------------------------------------
		$store->close_db($dbh);

		#-------------------------------------------------------------------------------------------
		# Timestamp mdata
		#my $notif=Crawler::Notifications->new();
		#$notif->set_mdata_mark($cid,$gCID_IP);
		$store->set_gui_mark($cid,$gCID_IP);

	};

	if ($@) {$store->log('info',"ERROR cid=$gCID cid_ip=$gCID_IP ($@)"); }
}

#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
sub usage {

   my $legend = check_version();

   my @fpth = split ('/',$0,10);
   my @fname = split ('\.',$fpth[$#fpth],10);
   my $USAGE = <<USAGE;
$legend
Borrado de alertas en el frontal del Interfaz

$fpth[$#fpth]  -c [cid] -i [cid_ip] -a [id_alert] [-d] [-h]
-a [id_alert]: Es el ID de la alerta a eliminar.
-c [cid]: CID Client ID
-i [cid_ip]: CID IP Cliente
-x [hidx]: HIDX Client ID
-d: [debug|info] Fija el nivel de depuracion (por defecto info)
-h: Ayuda

USAGE

   return $USAGE;

}


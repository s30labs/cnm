#!/usr/bin/perl -w
#-------------------------------------------------------------------------------------------
# Fichero: proxy-exec
# ./proxy-exec -i 1 -f /opt/data/mdata/scripts/linux_metric_certificate_expiration_time.pl -a "10.2.254.222 443"
#-------------------------------------------------------------------------------------------
use lib "/opt/crawler/bin";
use strict;
use Getopt::Std;
use ONMConfig;
use Crawler::Store;
use Crawler::Xagent;

#-------------------------------------------------------------------------------------------
my $VERSION='1.0';
#-------------------------------------------------------------------------------------------

my $FILE_CONF='/cfg/onm.conf';
#-------------------------------------------------------------------------------------------
my $rcfgbase=conf_base($FILE_CONF);
my $host_idx=$rcfgbase->{'host_idx'}->[0];
my $host=$rcfgbase->{'host_name'}->[0];
my $data_path=$rcfgbase->{'data_path'}->[0];

my $store_path=$rcfgbase->{'store_path'}->[0];
my $db_server=$rcfgbase->{db_server}->[0];
my $db_name=$rcfgbase->{db_name}->[0];
my $db_user=$rcfgbase->{db_user}->[0];
my $db_pwd=$rcfgbase->{db_pwd}->[0];

#-------------------------------------------------------------------------------------------
my ($rc,$rcstr)=(0,'');
my %opts=();
getopts("hf:a:d:i:t:l",\%opts);
my $log_level= (defined $opts{d}) ? $opts{d} : 'info';

if ($opts{h}) { my $USAGE = usage(); die $USAGE;}

my $store=Crawler::Store->new(db_server=>$db_server,db_name=>$db_name,db_user=>$db_user,db_pwd=>$db_pwd);
$store->store_path($store_path);
my $dbh=$store->open_db();

if ($opts{l}) {
	my $proxies = $store->get_proxy_list($dbh);
	$store->close_db($dbh);

	foreach my $id (sort keys %$proxies) {
		print $id.' : '.$proxies->{$id}->{'proxy_host'}.' ('.$proxies->{$id}->{'proxy_port'}.')  '.$proxies->{$id}->{'proxy_type'}."\n";
	}
	exit 0;
}

my $id_proxy=0;
if (! exists $opts{i}) { my $USAGE = usage(); die $USAGE;}
if ($opts{i} !~ /\d+/) { my $USAGE = usage(); die $USAGE;}
else { $id_proxy=$opts{i}; }

if (! $opts{f}) { my $USAGE = usage(); die $USAGE;}
my $file_script=$opts{f};
system ("/bin/chmod 755 $file_script");

my $params='';
if ($opts{a}) { 
	$params=$opts{a};
	$params=~s/^"(.*)"$/$1/;
}

my $pagent=Crawler::Xagent->new(name=>"proxy-exec", cfg=>$rcfgbase, log_level=>$log_level );
$pagent->store($store);
$pagent->dbh($dbh);


$pagent->exec_vector({'file_script'=>$file_script, 'params'=>$params, 'host_ip'=>''});
if (exists $opts{t}) { $pagent->timeout($opts{t}); }

$rc=$pagent->get_proxy_credentials($id_proxy);
$store->close_db($dbh);

if ($rc) {
	my $err_str=$pagent->err_str();
	die "**ERROR** ($rc) $err_str\n";
}

my $out_cmd=$pagent->execScript();

# ------------------------------
# RESULTADO (STDOUT) 
# ------------------------------
foreach my $l (@$out_cmd) {
	print "$l\n";
}

# ------------------------------
# ERRORES (STDERR) 
# ------------------------------
if ($pagent->stderr() ne '') {
	print STDERR $pagent->stderr(),"\n";
}

# ------------------------------
# EXIT CODE 
# ------------------------------
exit $pagent->err_num();


#-------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------
sub usage {

   my $legend = check_version();

   my @fpth = split ('/',$0,10);
   my @fname = split ('\.',$fpth[$#fpth],10);
   my $USAGE = <<USAGE;
$legend
Ejecuta script en proxy.

$fpth[$#fpth] -h  : Ayuda
$fpth[$#fpth] -l  : Presenta la lista de proxies definidos.
$fpth[$#fpth] -i id_proxy -t 30 -f script -a "params" [-d debug]

-h:  Ayuda
-l:  Lista los proxies definidos
-i:  Id del proxy a utilizar
-f:  Fichero que contiene el script a ejecutar
-a:  Parametros del script
-t:  Timeout aplicable al script
-d:  Nivel de depuracion

USAGE

   return $USAGE;

}


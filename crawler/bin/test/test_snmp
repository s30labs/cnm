#!/usr/bin/perl -w
use lib "/opt/crawler/bin";
use strict;
use Getopt::Std;
use Crawler::SNMP;

print_time();
my $snmp=Crawler::SNMP->new();
$snmp->retries(1);
$snmp->timeout(700000);

print_time();

my %params=(host_ip=>'10.64.100.100', comunity=>'public', oid=>'.1.3.6.1.2.1.2.2.1.10.2');
#my %params=(host_ip=>'localhost', comunity=>'public', oid=>'.1.3.6.1.2.1.2.2.1.10.2');

my $r=$snmp->snmp_get_location($params{host_ip});
my $rc=$snmp->err_num();
my $rcstr=$snmp->err_str();
print "RES [get_location]: $r  [rc=$rc] (rcstr=$rcstr)\n";
print_time();


$r=$snmp->snmp_get_description($params{host_ip});
$rc=$snmp->err_num();
$rcstr=$snmp->err_str();
print "RES [get_description]: $r [rc=$rc] (rcstr=$rcstr)\n";
print_time();


$r=$snmp->snmp_get_name($params{host_ip});
$rc=$snmp->err_num();
$rcstr=$snmp->err_str();
print "RES [get_name]: $r [rc=$rc] (rcstr=$rcstr)\n";
print_time();

$r=$snmp->snmp_get_uptime($params{host_ip});
$rc=$snmp->err_num();
$rcstr=$snmp->err_str();
print "RES [get_uptime]: $r [rc=$rc] (rcstr=$rcstr)\n";
print_time();

$r=$snmp->snmp_get_oid($params{host_ip});
$rc=$snmp->err_num();
$rcstr=$snmp->err_str();
print "RES [get_oid]: $r [rc=$rc] (rcstr=$rcstr)\n";
print_time();

$r=$snmp->snmp_get_version($params{host_ip});
$rc=$snmp->err_num();
$rcstr=$snmp->err_str();
print "RES [get_version]: $r [rc=$rc] (rcstr=$rcstr)\n\n";
print_time();

exit;
$r=$snmp->core_snmp_get(\%params);
print "RES [core_snmp_get]: $params{oid}=>@$r\n\n";


#%params=(host_ip=>'r17b1049.of.cm.es', comunity=>'public', oid=>'.1.3.6.1.2.1.4.22.1.3&.1.3.6.1.2.1.4.22.1.2');
#%params=(host_ip=>'r17b1049.of.cm.es', comunity=>'public', oid=>'ipNetToMediaNetAddress_ipNetToMediaPhysAddress');
%params=(host_ip=>'localhost', comunity=>'public', oid=>'ifDescr_ifType');
$r=$snmp->core_snmp_table(\%params);
foreach (@$r) {
	print "RES [core_snmp_walk]: $_\n";
}


%params=(host_ip=>'localhost', comunity=>'public', oid=>'ifDescr');
$r=$snmp->core_snmp_table(\%params);
foreach (@$r) {
   print "RES [core_snmp_walk]: $_\n";
}


sub print_time {

	my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
	$year += 1900; $mon+=1;
	print "***>$mday-$mon-$year  $hour:$min:$sec\n";

}

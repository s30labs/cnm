#!/usr/bin/perl -w
#---------------------------------------------------------------------------
use SNMP;

# requires a hostname and a community string as its arguments
$session = new SNMP::Session(DestHost => $ARGV[0], Community => $ARGV[1],
                             Version=>'1', UseSprintValue => 1);

die "session creation error: $SNMP::Session::ErrorStr" unless 
  (defined $session);

# set up the data structure for the getnext command
#$vars = new SNMP::VarList(['ipNetToMediaNetAddress'], ['ipNetToMediaPhysAddress']);
#$vars = new SNMP::VarList(['.1.3.6.1.2.1.4.22.1.3'],['.1.3.6.1.2.1.4.22.1.2']);

#my $VARLIST='.1.3.6.1.2.1.4.22.1.3&.1.3.6.1.2.1.4.22.1.2';
my $OID='ifDescr';

my @values=();
my @o=split(/\|/,$OID);
foreach my $VARLIST (@o) {

	my @varlist=map([$_],split(/_/,$VARLIST));
	$vars = new SNMP::VarList(@varlist);

	my $mark=$varlist[0][0];
	#print "***$mark****\n";
	#print "***VARLIST=@varlist****\n";

	do {

		#($ip,$mac) = $session->getnext($vars);
		my @r = $session->getnext($vars);
		my $t=$$vars[0]->tag;
		#print "***VAR=$vars****\n";
		#print "***R=@r****\n";
		#print "***TAG=$t****\n";
		if ($$vars[0]->tag eq $mark){
			push @values, join (':',@r);
			#print "@r\n";
		}
		#else {print $$vars[0]->tag,"\n";}
	} until ($session->{ErrorStr});

}

foreach (@values) {print "$_\n";}
